#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [t, aspectratio=169, 10pt]
#+latex_header: \mode<beamer>{\usetheme{Singapore} \usecolortheme{orchid}}
#+latex_header:  \usepackage{natbib}
#+latex_header: \beamertemplatenavigationsymbolsempty
#+MACRO: BEAMERMODE presentation
#+MACRO: BEAMERSUBJECT RMRF
#+BEAMER_FRAME_TITLE: 1
#+OPTIONS:  h:2 ^:nil
#+TITLE: Modelling the effects of domestication in Wheat through novel computer-vision techniques
#+AUTHOR: Nathan Hughes


#+BEGIN_LaTeX
\addtobeamertemplate{block begin}{%
  \setlength{\textwidth}{1.0\textwidth}%
}{}

\addtobeamertemplate{block alerted begin}{%
  \setlength{\textwidth}{1.0\textwidth}%
}{}

\addtobeamertemplate{block example begin}{%
  \setlength{\textwidth}{1.0\textwidth}%
}{}


\AtBeginSection[]
  {
    \ifnum \value{framenumber}>3
      \begin{frame}<beamer>
      \frametitle{Outline}
      \tableofcontents[currentsection]
      \end{frame}
    \else
    \fi
  }

\setbeamertemplate{caption}[numbered]
\setbeamerfont{bibliography item}{size=\footnotesize}
\setbeamerfont{bibliography entry author}{size=\footnotesize}
\setbeamerfont{bibliography entry title}{size=\footnotesize}
\setbeamerfont{bibliography entry location}{size=\footnotesize}
\setbeamerfont{bibliography entry note}{size=\footnotesize}
\setbeamertemplate{bibliography item}{\insertbiblabel}
#+END_LaTeX

* Description of Topic

** What is the project?

*** Description

The project is aiming to use computational methods to answer biologically significant
 questions on wheat grain morphology and domestication using \textmu{CT} images.


*** How?

To do this, I will be using:

- Computer vision on 3D image sets
- Statistical analysis and data science
- Scientific theory to create reproducible results


** Research Question:
*** Is it possible to use \textmu{CT} imaging to answer questions about Wheat domestication?
/I hope so!/
*** Null-Hypothesis
- $H_0=$ Domestication has no effect on the morphometric properties of wheat
- $H_0=$ Ploidy has no effect on the morphometric properties of wheat
- $H_0=$ There is no difference in hulled and non-hulled genotypes

/*Hulling is a trait associated with domestication/


** Extracted Features

*** Features List						      :BMCOL:
   :PROPERTIES:
   :BEAMER_env: block
   :BEAMER_col: 0.45
   :END:

The features I am collecting are:

- Length
- Width
- Depth
- Volume
- Surface Area
- Crease Depth
- Crease Volume
- X,Y,Z coordinates of grains

*** Image							      :BMCOL:
   :PROPERTIES:
   :BEAMER_col: 0.3
   :END:
    #+ATTR_LATEX: :width 2.6cm
    #+CAPTION: Major features extracted from analysis
    [[./images/grains.png]]



** Aims

*** Primary Aims

I am wanting to produce:

- A software library (in Python) which can be used to help analysis of \textmu{CT} scanned seeds
- A GUI application for researchers to use to auto analyse seeds
- Answers to my hypothesis

* Materials and Image Capture Setup

** Materials (Plant)
*** Wheat information						      :BMCOL:
   :PROPERTIES:
   :BEAMER_env: block
   :BEAMER_col: 0.3
   :END:

I have a wide range of Wheat genotypes, these are:
- Ranged between diploid, tetraploid and hexiploid
- 12 total genotypes
- Divided between domestication status

*** Image							      :BMCOL:
   :PROPERTIES:
   :BEAMER_col: 0.6
   :END:
    #+ATTR_LATEX: :width 4cm
    #+CAPTION: Two wheat spikes, showing diversity in Population, Compactum (6N) left, Durum right (4N)
    [[./images/wheatspike.png]]

** Methods (Image Generation)

*** Capture Methods
In order to generate this data  a \textmu{CT}100 scanner (ScancoMedical, Switzerland) was used
Each spike was:
- ~1000 slices (51 slices per stack),
- 125 projections/180\textdegree{} were taken and a
- binning of 6 was used.
- Output images are a 0.2 megapixel (512 x 512) resolution (68.8 \textmu{}/pixel)



* Completed Work
** Data Gathering
*** MATLAB Software
Data has been extracted from the \textmu{CT} images using a method I previously developed at
IBERS [cite:Hughes2017]. A lot of additions and novel augmentations have been added in order to work
with the range of Wheat genotypes.

\vspace{0.5cm}

- This is done via separating non-grain from grain ROIs in the image data
- Measurements are taken on a per grain level
- Measurements are in mm, mm^2 and mm^3 based on type
- Data is exported as CSV files

** Example Data

*** Image Analysis Output (Data Truncated for Presentation)
Each 3D image scan results in an individual CSV file, the contents
 of which is similar to the example below, where each row is an individual grain:

#+attr_latex: :environment longtable :align l|llllllll
#+NAME: tab:data
|   | scanid | length | width | depth | crease_depth | circularity | surface_area |  volume |
|---+--------+--------+-------+-------+--------------+-------------+--------------+---------|
| 0 | C02871 |   4.47 |  3.74 | 3.693 |         0.65 |      0.8283 |         56.1 | 31.7688 |
| 1 |        |   5.29 |  3.80 | 3.106 |          0.3 |       0.923 |         53.7 |  31.059 |
| 2 |        |   4.05 |  4.49 | 3.728 |         0.59 |       0.848 |       57.722 |  32.978 |
| 3 |        |   4.05 |  4.03 | 2.725 |         0.79 |       0.779 |         49.0 |   25.41 |
| 4 |        |   3.99 |  3.84 |   3.5 |        0.616 |       0.785 |        54.67 |   30.99 |
| 5 |        |    4.8 |  3.86 |   3.1 |        0.482 |       0.913 |         50.4 |  28.288 |
| 6 |        |    3.7 |  3.82 |   2.9 |         0.75 |       0.816 |        47.30 |   24.16 |
| 7 |        |   3.99 |  4.46 | 3.584 |        0.638 |        0.85 |         53.7 |   30.88 |





** Improved Watershedding Algorithm

*** Algorithm for /Quasi-Euclidean/ Distance
#+NAME: eqn:qe
\begin{equation}
\left  | x_1 - x_2 \right | + (\sqrt{2}-1), \left | x_1 - x_2 \right | >\left | y_1 - y_2 \right | (\sqrt{2}-1) \left | x_1 - x_2 \right |,\textup{otherwise}
\end{equation}


*** Visual Example
#+CAPTION: /A/ showing the chessboard method, /B/ improved quasi-euclidean method
#+ATTR_LATEX: :width 6cm
#+NAME: fig:qe
[[./images/quasi.png]]


** Grain Analyser Library example output - 1
#+BEGIN_CENTER
#+ATTR_LATEX: :width 9cm
#+CAPTION: Statistical Python Library Boxplot output
[[./images/boxplots.png]]
#+END_CENTER

** Grain Analyser Library example output - 2
#+BEGIN_CENTER
#+ATTR_LATEX: :width 9cm
#+CAPTION: Statistical Python Library Boxplot output  style 2
[[./images/boxplots2.png]]
#+END_CENTER


** Grain Analyser Library example output - 3
#+BEGIN_CENTER
#+ATTR_LATEX: :width 12cm
#+CAPTION: Statistical Python Library PCA output
[[./images/pca2.png]]
#+END_CENTER

* Work in Progress

** Data Analysis /WIP/

*** Statistical Methods to be implemented
These will be implemented in Python using the library /SciPy/ [cite:jones2014scipy]
**** Statistical Tests1						      :BMCOL:
    :PROPERTIES:
    :BEAMER_col: 0.45
    :END:
- ANOVA
- MANOVA
- GLMs

**** Statistical Tests2						      :BMCOL:
    :PROPERTIES:
    :BEAMER_col: 0.45
    :END:
- $\chi^2$ Tests
- PCA
- T/F-Tests


*** Graphing Methods to be implemented
All Graphing is being implemented using Matplotlib [cite:Hunter:2007]
**** Graphing1							      :BMCOL:
    :PROPERTIES:
    :BEAMER_col: 0.45
    :END:
- Box
- Swarm
- Scatter / LM

**** Graphing2							      :BMCOL:
    :PROPERTIES:
    :BEAMER_col: 0.45
    :END:
- Violin
- Correlation Maps
- Frequency/Histograms



** Reproducible Analysis GUI - 1 /WIP/
#+BEGIN_CENTER
#+ATTR_LATEX: :width 11.5cm
#+CAPTION: Inital GUI
[[./images/gui1.png]]
#+END_CENTER

** Reproducible Analysis GUI - 2 /WIP/
#+BEGIN_CENTER
#+ATTR_LATEX: :width 11.5cm
#+CAPTION: GUI select folders to search for data
[[./images/gui2.png]]
#+END_CENTER

** Reproducible Analysis GUI - 3 /WIP/
#+BEGIN_CENTER
#+ATTR_LATEX: :width 11.5cm
#+CAPTION: GUI with data loaded sucessfully
[[./images/gui3.png]]
#+END_CENTER

** Reproducible Analysis GUI - 4 /WIP/
#+BEGIN_CENTER
#+ATTR_LATEX: :width 11.5cm
#+CAPTION: GUI dynamically graphing crease_depth
[[./images/gui4.png]]
#+END_CENTER

** Reproducible Analysis GUI - 5 /WIP/
#+BEGIN_CENTER
#+ATTR_LATEX: :width 11.5cm
#+CAPTION: GUI dynamically graphing crease_volume
[[./images/gui5.png]]
#+END_CENTER






* Additional Aims


** Additional Aims
*** Not yet started, but would like to implement by end of project
- Automate error finding and identification
- Visually Display Errors in Data
- Write testing suite for software

*** Ideas for future work
- Test software library on other datasets
- Grow more plants and create more replicates for more robust study

* Thanks

** Thanks to

*** All these people:
#+attr_latex: :environment longtable :align ll :width 10cm
#+NAME: tab:thanks
| Dr. Wayne Aubrey  | Prof. John Doonan    |
| Dr. Candida Nibau | Dr. Kevin Williams   |
| Dr. Kim Kenobi    | Everyone at the NPPC |
*** References
bibliography:projectdemo.bib
bibliographystyle:vancouver-authoryear
